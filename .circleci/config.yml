# CircleCI integration with Drupal 8.

# Reusable steps.

## Add SSH Key
add_ssh: &add_ssh
  add_ssh_keys:
    fingerprints:
      - "e0:09:da:50:aa:57:c7:32:27:ef:69:f3:87:19:a8:7e"

## Add Known Hosts
add_known_hosts: &add_known_hosts
  run:
    name: Add SSH Known Hosts
    command: |
      ssh-keyscan svn-23450.prod.hosting.acquia.com >> ~/.ssh/known_hosts
      ssh-keyscan web-42199.prod.hosting.acquia.com >> ~/.ssh/known_hosts
      ssh-keyscan staging-25390.prod.hosting.acquia.com >> ~/.ssh/known_hosts
      ssh-keyscan -t rsa,dsa github.com >> ~/.ssh/known_hosts

## Defines images and working directory.
defaults: &defaults
  docker:
    - image: pookmish/drupal8ci:latest
    - image: circleci/mysql:5.7
      environment:
        MYSQL_DATABASE: drupal
        MYSQL_USER: drupal
        MYSQL_PASSWORD: drupal
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
      command: ['--max-allowed-packet=67108864']
  working_directory: /var/www/html

## Defines the cache restoring mechanism.
restore_cache: &restore_cache
  # We use the composer.lock as a way to determine if we can cache our build.
  keys:
    - cache-{{ checksum "blt/blt.yml" }}-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ .Environment.CACHE_VERSION }}
    - cache-{{ checksum "blt/blt.yml" }}-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-
    # fallback to using the latest cache if no exact match is found
    - cache-{{ checksum "blt/blt.yml" }}-{{ checksum "composer.json" }}

## Defines the cache saving mechanism.
save_cache: &save_cache
  paths:
    - ./vendor
    - ./docroot/libraries
    - ./docroot/core
    - ./docroot/modules/contrib
    - ./docroot/modules/custom
    - ./docroot/themes/contrib
  key: cache-{{ checksum "blt/blt.yml" }}-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}-{{ .Environment.CACHE_VERSION }}

disable_telemetry: &disable_telemetry
  run:
    name: Disable Telemetry
    command: vendor/bin/blt blt:telemetry:disable --no-interaction

update_dependencies: &update_dependencies
  <<: *defaults
  steps:
    - *add_ssh
    - *add_known_hosts
    - checkout
    - restore_cache: *restore_cache
    - run: composer install --optimize-autoloader
    - *disable_telemetry
    - run:
        name: Update dependencies
        no_output_timeout: 30m
        command: |
          dockerize -wait tcp://localhost:3306 -timeout 1m &&
          apachectl stop && apachectl start &&
          git config --global user.email "sws-developers@lists.stanford.edu" &&
          git config --global user.name "CircleCI" &&
          blt drupal:install -n &&
          drush cim -y &&
          composer update -n &&
          drush updatedb -y &&
          drush config:export -y &&
          git add config composer.lock docroot &&
          git commit -m "Updated dependencies $DATE" &&
          git push origin $CIRCLE_BRANCH &&
          blt humsci:clean-backups &&
          blt humsci:clean-branches
    - save_cache: *save_cache

# Declare all the jobs we should run.
jobs:
  run-updates:
    <<: *update_dependencies

version: 2.1
# Declare a workflow that runs all of our jobs in parallel.
workflows:
  dependency_updates:
    triggers:
      - schedule:
          cron: "0 14 * * 5"
          filters:
            branches:
              only:
                - /11\..*-release/
    jobs:
      - run-updates
