services:

  # What to call the service hosting the site.
  suhumsci:

    # Use PHP 8 with Apache
    image: pookmish/drupal8ci:tugboat

    # Set this as the default service. This does a few things
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true

    # Wait until the mysql service is done building
    depends: mysql
    aliases:
      - hs-colorful
      - hs-traditional

    # A set of commands to run while building this service
    commands:

      # Commands that set up the basic preview infrastructure
      init:
        # Add nodeJS to build theme assets after composer install
        - curl -fsSL https://deb.nodesource.com/setup_current.x | bash -
        - apt-get install -y nodejs
        # Symlink the tugboat directory to the docker image expected path.
        - rm -rf /var/www/localhost
        - ln -snf ${TUGBOAT_ROOT} /var/www/localhost
        - ln -s docroot htdocs

        # Install/update packages managed by composer, including drush
        - rm -rf vendor
        - composer install --no-ansi
        - blt blt:telemetry:disable --no-interaction

        # Init the settings files.
        - blt blt:init:settings

        # Download the Diffy CLI tool, and authenticate. The latest version can be
        # found at https://github.com/DiffyWebsite/diffy-cli/releases
        - curl -L https://github.com/DiffyWebsite/diffy-cli/releases/download/0.1.33/diffy.phar -o /usr/local/bin/diffy
        - chmod +x /usr/local/bin/diffy
        - diffy auth:login ${DIFFY_API_KEY}

        # Clean up after apt-get, if it was used
        #- apt-get clean
        #- rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

      online:
        # If you would like to compare this service with production
        - diffy project:compare ${DIFFY_PROJECT_ID} prod custom --env2Url="${TUGBOAT_SERVICE_URL}"
          --commit-sha=${TUGBOAT_PREVIEW_SHA}
        
      update:
        - rm -rf vendor
        - composer install --no-ansi
        - mysql -h mysql -P 3306 -u tugboat -ptugboat -e 'SET GLOBAL max_allowed_packet=67108864;'
        # Sync to hs_colorful and hs_colorful database & files.
        - blt drupal:sync:files --site=hs_colorful
        - drush @hs_colorful.local user:create tugboat --password=tugboat || true
        - drush @hs_colorful.local user:role:add administrator tugboat || true

        - blt drupal:sync:files --site=hs_traditional
        - drush @hs_traditional.local user:create tugboat --password=tugboat || true
        - drush @hs_traditional.local user:role:add administrator tugboat || true

        - chown -R www-data:www-data ${TUGBOAT_ROOT}/docroot/sites/*/files
      build:
        - rm -rf vendor
        - composer install --no-ansi
        - mysql -h mysql -P 3306 -u tugboat -ptugboat -e 'SET GLOBAL max_allowed_packet=67108864;'

        - drush @hs_colorful.local cr
        - drush @hs_colorful.local eval '\Drupal::moduleHandler()->loadInclude("user", "install");user_update_10000();'
        - blt drupal:update --site=hs_colorful

        - drush @hs_traditional.local cr
        - drush @hs_traditional.local eval '\Drupal::moduleHandler()->loadInclude("user", "install");user_update_10000();'
        - blt drupal:update --site=hs_traditional

        - npm run theme-build

    # Collection of urls to compare visual results.
    urls:
      - /
      - /components/collections/collections-postcards
      - /private-pages/private-page-components

  # What to call the service hosting MySQL. This name also acts as the
  # hostname to access the service by from the php service.
  mysql:

    # Use the latest available 5.x version of MySQL
    image: tugboatqa/mysql:5
    commands:
      update:
        - mysql -e 'SET GLOBAL max_allowed_packet=67108864;'
        # Delete and recreate the database for each site.
        - mysql -e "DROP DATABASE IF EXISTS hs_colorful; CREATE DATABASE hs_colorful;"
        - mysql -e "DROP DATABASE IF EXISTS hs_traditional; CREATE DATABASE hs_traditional;"

        # Give the tugboat user access to the new databases.
        - mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'tugboat'; FLUSH PRIVILEGES;"

        # Download each database dump.
        - scp humscigryphon.prod@web-42199.prod.hosting.acquia.com:/mnt/gfs/humscigryphon.prod/backups/prod-hs_colorful-humscigrydb423120-`date -d '8 hours ago' +%Y-%m-%d`.sql.gz /tmp/hs_colorful.sql.gz
        - scp humscigryphon.prod@web-42199.prod.hosting.acquia.com:/mnt/gfs/humscigryphon.prod/backups/prod-hs_traditional-humscigrydb423132-`date -d '8 hours ago' +%Y-%m-%d`.sql.gz /tmp/hs_traditional.sql.gz

        # Import each database dump into the associated table.
        - zcat /tmp/hs_colorful.sql.gz | mysql hs_colorful
        - zcat /tmp/hs_traditional.sql.gz | mysql hs_traditional

        # Clean up after ourselves to keep the Preview size small.
        - rm /tmp/*.sql.gz
