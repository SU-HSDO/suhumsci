<?php

/**
 * @file
 * Update functions for hs_layouts module.
 */

use Drupal\layout_builder\Section;

/**
 * Set main content id in content types default layout builder config.
 */
function hs_layouts_update_9401() {
  $storage = \Drupal::entityTypeManager()->getStorage('entity_view_display');
  $query = $storage->getQuery()->accessCheck(FALSE);
  $items = $query->execute();
  foreach ($items as $item) {
    if (preg_match('/^node\.(\w+)\.default/', $item, $matches)) {
      $content_type = $matches[1];
      $view_display = $storage->load($item);
      if ($view_display->isLayoutBuilderEnabled()) {
        $sections = $view_display->getThirdPartySetting('layout_builder', 'sections');
        if (count($sections)) {
          $main_section = $sections[0];
          if ($content_type === 'hs_basic_page' && count($sections) > 1) {
            foreach ($sections as $section) {
              if ($section->getLayoutSettings()['section_width'] !== 'hs-full-width') {
                $main_section = $section;
                break;
              }
            }
          }
          $main_section->setLayoutSettings(array_merge($main_section->getLayoutSettings(), ['main_content' => 'main-region']));
          $view_display->save();
        }
      }
    }
  }
}

/**
 * Set main content id in nodes with overridden layout builder config.
 */
function hs_layouts_update_9402() {
  // Get all sections in nodes with overridden layout.
  $db = \Drupal::database();
  $result = $db->select('node__layout_builder__layout', 'nl')
    ->fields('nl', ['entity_id', 'delta', 'layout_builder__layout_section'])
    ->orderBy('entity_id')
    ->orderBy('delta')
    ->execute();

  // Id of the node being currently processed.
  $current_id = NULL;
  // Last 'processed' node. A node is considered 'processed' if it has one
  // section with the 'main_content' setting set to 'main-region'.
  $processed_id = NULL;
  // Keep track of a node's first section, in case all sections are
  // 'full width'.
  $first_section = NULL;

  foreach ($result as $record) {
    $section = unserialize($record->layout_builder__layout_section);
    // We're on a new node.
    if ($record->entity_id !== $current_id) {
      // Last node wasn't processed, fallback to setting the first section as
      // main content.
      if ($current_id !== $processed_id && isset($first_section)) {
        $settings = $first_section['section']->getLayoutSettings();
        $settings['main_content'] = 'main-region';
        $first_section['section']->setLayoutSettings($settings);
        _update_section($first_section['entity_id'], $first_section['delta'], $first_section['section']);
      }
      $current_id = $record->entity_id;
      // Store node's first section.
      $first_section = [
        'entity_id' => $record->entity_id,
        'delta' => $record->delta,
        'section' => $section,
      ];
    }
    $settings = $section->getLayoutSettings();
    if ($settings['section_width'] !== 'hs-full-width' && $processed_id !== $current_id) {
      // Set 'main_content' setting to 'main-region' in the first non full
      // width section.
      $settings['main_content'] = 'main-region';
      $processed_id = $current_id;
    }
    else {
      // Set 'main_content' setting to 'none' in all other sections.
      $settings['main_content'] = 'none';
    }
    $section->setLayoutSettings($settings);
    _update_section($record->entity_id, $record->delta, $section);
  }
}

/**
 * Update overridden layout builder section.
 *
 * @param int $entity_id
 *   Id of the node associated to the section.
 * @param int $delta
 *   Delta value of the section.
 * @param \Drupal\layout_builder\Section $section
 *   Updated section object to write in the database.
 */
function _update_section(int $entity_id, int $delta, Section $section) {
  $db = \Drupal::database();
  $db->update('node__layout_builder__layout')
    ->condition('entity_id', $entity_id)
    ->condition('delta', $delta)
    ->fields([
      'layout_builder__layout_section' => serialize($section),
    ])
    ->execute();
}
