<?php

/**
 * @file
 * Contains hs_migrate.module.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\NodeInterface;
use \Drupal\config_pages\ConfigPagesInterface;

/**
 * Implements hook_help().
 */
function hs_migrate_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the hs_migrate module.
    case 'help.page.hs_migrate':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Adds more functionality to migrate and migrate plus modules') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_migrate_process_info_alter().
 */
function hs_migrate_migrate_process_info_alter(array &$definitions) {
  // Change the class we use for the subprocess functionality to cast xml
  // objects as arrays.
  $definitions['sub_process']['class'] = '\Drupal\hs_migrate\Plugin\migrate\process\SubProcess';
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function hs_migrate_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $form_state->getFormObject()->getEntity();
  if (!$node->id() || !_hs_migrate_node_is_imported($node)) {
    return;
  }
  \Drupal::messenger()
    ->addWarning(t('This content has been imported from an external source. Some fields changes may be overridden on the next content sync.'));
}

/**
 * Check if the current node is one of the migrated items.
 *
 * @param \Drupal\node\NodeInterface $node
 *   Node entity object.
 *
 * @return bool
 *   If the node was imported.
 */
function _hs_migrate_node_is_imported(NodeInterface $node) {
  $database = \Drupal::database();
  foreach ($database->schema()->findTables('migrate_map%') as $table) {
    if (
      strpos($table, '_d7_') !== FALSE ||
      !$database->schema()->fieldExists($table, 'destid1')
    ) {
      continue;
    }
    $count = $database->select($table, 't')
      ->fields('t')
      ->condition('destid1', $node->id())
      ->condition('source_row_status', 0)
      ->countQuery()
      ->execute()
      ->fetchField();

    return (bool) $count;
  }
  return FALSE;
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function hs_migrate_config_pages_presave(ConfigPagesInterface $config_page) {
  if ($config_page->id() == 'hs_d7_content') {
    Cache::invalidateTags(['migration_plugins']);
  }
}

/**
 * Implements hook_migration_plugins_alter().
 */
function hs_migrate_migration_plugins_alter(array &$migrations) {
  if(isset($migrations['migration_config_deriver:hs_news_rss'])){
    $migration = &$migrations['migration_config_deriver:hs_news_rss'];
    /** @var \Drupal\config_pages\ConfigPagesLoaderServiceInterface $loader */
    $loader = \Drupal::service('config_pages.loader');
    $loader->getFieldView('hs_d7_content', 'field_news_rss');
  }
}
