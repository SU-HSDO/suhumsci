<?php

/**
 * @file
 * hs_paragraph_types.module
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_HOOK().
 */
function hs_paragraph_types_preprocess_paragraph(&$variables) {
  if (in_array($variables['paragraph']->bundle(), ['hs_collection', 'hs_priv_collection'])) {
    /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
    $paragraph = $variables['paragraph'];
    $row_style = $paragraph->get('field_paragraph_style')->getString();
    if (!empty($row_style)) {
      $variables['attributes']['class'][] = 'hs-paragraph-style hs-paragraph-style--' . $row_style;
    }
    $variables['#attached']['library'][] = 'hs_paragraph_types/hs_collection';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hs_paragraph_types_preprocess_field__field_hs_collection_items(&$variables) {
  /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
  $paragraph = $variables['element']['#object'];
  $items_per_row = (int) $paragraph->get('field_hs_collection_per_row')
    ->getString();
  $variables['attributes']['class'][] = "item-per-row--$items_per_row";
  $variables['#attached']['library'][] = 'hs_paragraph_types/hs_collection';
}

/**
 * Implements hook_field_widget_single_element_WIDGET_TYPE_form_alter().
 */
function hs_paragraph_types_field_widget_single_element_paragraphs_browser_form_alter(&$element, FormStateInterface $form_state, $context) {

  // There are multiple issues with setting and removing the required state
  // from paragraph fields when using the `conditional_fields` module, so
  // use form alter to use the states api instead.
  // @see https://www.drupal.org/project/conditional_fields/issues/3344587
  // Check that hs_collection is the correct paragraph type
  // and correct fields are present.
  if ($element['#paragraph_type'] === 'hs_collection' && !empty($element['subform']['field_title']) && !empty($element['subform']['field_title_settings'])) {
    // Build title settings name for this component.
    $title_settings_name = '';
    foreach ($element['subform']['field_title_settings']['widget']['#field_parents'] as $delta) {
      if (!empty($title_settings_name)) {
        $delta = "[$delta]";
      }
      $title_settings_name .= $delta;
    }
    $title_settings_name .= '[field_title_settings]';

    $header_conditions = [
      ':input[name="' . $title_settings_name . '"]' => [
        [
          'value' => 'collection_title_visible',
        ],
        'or',
        [
          'value' => 'collection_title_sr_only',
        ],
      ],
    ];

    $element['subform']['field_title']['widget'][0]['value']['#states'] = [
      'required' => [$header_conditions],
      'visible' => [$header_conditions],
    ];
  }
}
