<?php

/**
 * @file
 * hs_shortcut_nesting.module
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\hs_shortcut_nesting\Form\HumsciSetCustomize;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Component\Utility\NestedArray;

/**
 * Implements hook_entity_base_field_info().
 */
function hs_shortcut_nesting_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() == 'shortcut') {
    $fields['parent'] = BaseFieldDefinition::create('integer')
      ->setLabel(t('Parent'))
      ->setDescription(t('Parent menu item.'))
      ->setDefaultValue(0);

    $fields['depth'] = BaseFieldDefinition::create('integer')
      ->setLabel(t('Depth'))
      ->setDescription(t('Depth within the menu.'))
      ->setDefaultValue(0);
  }
  return $fields;
}

/**
 * Implements hook_toolbar().
 */
function hs_shortcut_nesting_toolbar() {
  $items = shortcut_toolbar();

  $items['shortcuts']['tray']= [
    '#theme' => 'menu',
    '#menu_name' => 'shortcuts',
    '#items' => [],
  ];

  /** @var \Drupal\shortcut\ShortcutSetInterface $shortcut_set */
  $shortcut_set = shortcut_current_displayed_set();
  $shortcuts = $shortcut_set->getShortcuts();
  $max_depth = 0;

  foreach ($shortcuts as $shortcut) {
    $shortcut_depth = $shortcut->get('depth')->getString();
    $max_depth = $shortcut_depth > $max_depth ? $shortcut_depth : $max_depth;
  }

  $menu_items = [];
  $depth = 0;
  while ($depth <= $max_depth) {
    foreach ($shortcuts as $shortcut) {
      if ($shortcut->get('depth')->getString() == $depth) {
        $path = hs_shortcut_get_item_parents($shortcuts, $shortcut->id());
        $menu_item = [
          'title' => $shortcut->getTitle(),
          'url' => $shortcut->getUrl(),
        ];
        NestedArray::setValue($menu_items, $path, $menu_item);
      }
    }
    $depth++;
  }
  $items['shortcuts']['tray']['#items'] = $menu_items;
  $items['shortcuts']['#attached']['library'][] = 'hs_shortcut_nesting/toolbar';

  return $items;
}

/**
 * Get the path of the given link id to build a nested menu.
 *
 * @param \Drupal\shortcut\ShortcutInterface[] $shortcuts
 *   Array of shortcuts.
 * @param integer $link_id
 *   Shortcut link id.
 *
 * @return array
 *   Render array parent path.
 */
function hs_shortcut_get_item_parents($shortcuts, $link_id) {
  $shortcut = $shortcuts[$link_id];
  if ($parent_id = $shortcut->get('parent')->getString()) {
    $path = hs_shortcut_get_item_parents($shortcuts, $parent_id);
    $path[] = 'below';
    $path[] = $link_id;
    return $path;
  }
  return [$link_id];
}

/**
 * Implements hook_entity_type_build().
 */
function hs_shortcut_nesting_entity_type_build(array &$entity_types) {
  if (isset($entity_types['shortcut_set'])) {
    $entity_types['shortcut_set']->setFormClass('customize', HumsciSetCustomize::class);
  }
}
