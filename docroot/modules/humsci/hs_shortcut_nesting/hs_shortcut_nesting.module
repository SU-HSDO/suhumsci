<?php

/**
 * @file
 * hs_shortcut_nesting.module
 */

use Drupal\hs_shortcut_nesting\Form\HumsciSetCustomize;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_entity_base_field_info().
 */
function hs_shortcut_nesting_entity_base_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  $fields = [];
  if ($entity_type->id() == 'shortcut') {
    $fields['parent'] = BaseFieldDefinition::create('integer')
      ->setLabel(t('Parent'))
      ->setDescription(t('Parent menu item.'));

    $fields['depth'] = BaseFieldDefinition::create('integer')
      ->setLabel(t('Depth'))
      ->setDescription(t('Depth within the menu.'));
  }
  return $fields;
}

/**
 * Implements hook_toolbar().
 */
function hs_shortcut_nesting_toolbar() {
  $items = shortcut_toolbar();

  $items['shortcuts']['tray']['shortcuts'] = [
    '#theme' => 'menu',
    '#menu_name' => 'shortcuts',
    '#items' => [],
  ];

  /** @var \Drupal\shortcut\ShortcutSetInterface $shortcut_set */
  $shortcut_set = shortcut_current_displayed_set();

  $shortcuts_added = 0;
  while ($shortcuts_added != count($shortcut_set->getShortcuts())) {

//    foreach ($shortcut_set->getShortcuts() as $shortcut) {
//      if ($shortcut->get('depth')->getString() == 0) {
//        $items[$shortcut->id()] = [
//          'title' => $shortcut->getTitle(),
//          'url' => $shortcut->getUrl(),
//        ];
//        $shortcuts_added++;
//        continue;
//      }
//      $items = [
//        'title' => $shortcut->getTitle(),
//        'url' => $shortcut->getUrl(),
//      ];
//      \Drupal\Component\Utility\NestedArray::setValue($items, $item_parents, $item);
//    }
  }
  dpm($shortcut_set->getShortcuts());

  //  $max_depth = 0;
  //  foreach ($shortcut_links['#links'] as $link_id => $link) {
  //    unset($link['type']);
  //    $items['shortcuts']['tray']['shortcuts']['#items'][$link_id] = $link;
  //    $max_depth = $link['url']->getOption('depth') > $max_depth ? $link['url']->getOption('depth') : $max_depth;
  //  }
  //
  //  for ($i = 0; $i < $max_depth; $i++) {
  //    foreach ($items['shortcuts']['tray']['shortcuts']['#items'] as $link_id => $link) {
  //      if ($parent_id = $link['url']->getOption('parent')) {
  //        $items['shortcuts']['tray']['shortcuts']['#items'][$parent_id]['below'][$link_id] = $link;
  //        unset($items['shortcuts']['tray']['shortcuts']['#items'][$link_id]);
  //      }
  //    }
  //  }

  $items['shortcuts']['#attached']['library'][] = 'hs_shortcut_nesting/toolbar';

  return $items;
}

/**
 * Implements hook_entity_type_build().
 */
function hs_shortcut_nesting_entity_type_build(array &$entity_types) {
  if (isset($entity_types['shortcut_set'])) {
    $entity_types['shortcut_set']->setFormClass('customize', HumsciSetCustomize::class);
  }
}
