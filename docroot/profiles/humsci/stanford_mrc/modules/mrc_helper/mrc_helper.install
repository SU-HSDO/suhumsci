<?php

/**
 * @file
 * mrc_helper.install
 */

use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\views\Entity\View;

/**
 * @param string $entity_type
 * @param string $bundle
 * @param string $field_name
 * @param string $type
 * @param string $label
 * @param int $cardinality
 */
function mrc_helper_create_field($entity_type, $bundle = NULL, $field_name, $type, $label, $cardinality = -1) {
  $field_storage_config = FieldStorageConfig::loadByName($entity_type, $field_name);
  if (empty($field_storage_config)) {
    FieldStorageConfig::create([
      'field_name' => $field_name,
      'entity_type' => $entity_type,
      'type' => $type,
      'cardinality' => $cardinality,
    ])->save();
  }
  if ($bundle) {
    $field_instance = FieldConfig::loadByName($entity_type, $bundle, $field_name);
    if (empty($field_instance)) {
      FieldConfig::create([
        'field_name' => $field_name,
        'entity_type' => $entity_type,
        'bundle' => $bundle,
        'label' => $label,
      ])->save();
    }
  }
}


/**
 * Implements hook_install().
 */
function mrc_helper_install() {
  mrc_helper_create_field('node', 'stanford_event', 'field_mrc_event_series', 'entity_reference', 'MRC Event Series');
  mrc_helper_create_field('node', 'stanford_news_item', 'field_mrc_event_series', 'entity_reference', 'MRC Event Series');
  mrc_helper_create_field('node', 'stanford_visitor', 'field_mrc_event_series', 'entity_reference', 'MRC Event Series');

  // Get helper function.
  module_load_install('stanford_mrc');

  // Load content type config
  $path = drupal_get_path('module', 'mrc_events') . '/config/install';
  stanford_mrc_update_configs(TRUE, 'all', $path);

  $path = drupal_get_path('module', 'mrc_news') . '/config/install';
  stanford_mrc_update_configs(TRUE, 'all', $path);

  $path = drupal_get_path('module', 'mrc_visitor') . '/config/install';
  stanford_mrc_update_configs(TRUE, 'all', $path);

  // Save the pathauto pattern so that it's uuids correct and it applies.
  /** @var \Drupal\pathauto\Entity\PathautoPattern $entity */
  $entity = \Drupal::entityTypeManager()
    ->getStorage('pathauto_pattern')
    ->load('mrc_event_series_terms');
  if ($entity) {
    $entity->save();
  }
}

/**
 * Create missing pathauto pattern.
 */
function mrc_helper_update_8001() {

  mrc_helper_create_field('taxonomy_term', 'mrc_event_series', 'field_mrc_event_series_image', 'image', 'Hero Image', 1);
  mrc_helper_create_field('taxonomy_term', 'mrc_event_series', 'field_mrc_event_series_name', 'string', 'Hero Image', 1);

  $configs = [
    'core.entity_view_display.taxonomy_term.mrc_event_series.default',
    'core.entity_form_display.taxonomy_term.mrc_event_series.default',
    'field.storage.taxonomy_term.field_mrc_event_series_image',
    'field.storage.taxonomy_term.field_mrc_event_series_name',
    'field.field.taxonomy_term.mrc_event_series.field_mrc_event_series_name',
    'field.field.taxonomy_term.mrc_event_series.field_mrc_event_series_image',
    'pathauto.pattern.mrc_event_series_terms',
  ];

  module_load_install('stanford_mrc');
  $path = drupal_get_path('module', 'mrc_helper') . '/config/install';
  stanford_mrc_update_configs(TRUE, $configs, $path);

  // Save the pathauto pattern so that it's uuids correct and it applies.
  /** @var \Drupal\pathauto\Entity\PathautoPattern $entity */
  $entity = \Drupal::entityTypeManager()
    ->getStorage('pathauto_pattern')
    ->load('mrc_event_series_terms');
  if ($entity) {
    $entity->save();
  }

  $view = View::load('taxonomy_term');
  $view->disable();
  $view->save();
}
