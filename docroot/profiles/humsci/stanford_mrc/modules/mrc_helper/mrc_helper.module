<?php

/**
 * @file
 * mrc_helper.module
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\menu_block\Plugin\Block\MenuBlock;
use Drupal\Core\Block\BlockPluginInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\Entity\View;

/**
 * Implements hook_block_view_alter().
 */
function mrc_helper_block_view_alter(array &$build, BlockPluginInterface $block) {
  if ($block instanceof MenuBlock) {
    /** @var \Drupal\Core\Menu\MenuLinkTree $menu_tree */
    $menu_tree = \Drupal::service('menu.link_tree');
    $menu_name = $block->getDerivativeId();
    /** @var \Drupal\Core\Menu\MenuTreeParameters $parameters */
    $parameters = $menu_tree->getCurrentRouteMenuTreeParameters($menu_name);

    if (empty(array_filter($parameters->activeTrail))) {
      $build = [];
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mrc_helper_form_system_site_information_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['site_information']['site_slogan']['#title'] = t('Stanford Affiliation');
  $form['site_information']['site_slogan']['#description'] = t('Stanford University school or administrative unit your site is most associated with.');
  $admin_roles = \Drupal::entityTypeManager()
    ->getStorage('user_role')
    ->getQuery()
    ->condition('is_admin', TRUE)
    ->execute();
  $user_roles = \Drupal::currentUser()->getRoles();

  if (empty(array_intersect($user_roles, $admin_roles))) {
    $form['site_information']['site_slogan']['#attributes']['disabled'] = 'disabled';
  }
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function mrc_helper_field_widget_block_field_default_form_alter(&$element, FormStateInterface $form_state, $context) {
  if (!empty($element['plugin_id']['#options']['Views'])) {
    foreach ($element['plugin_id']['#options']['Views'] as $key => $label) {
      if (strpos($key, 'views_exposed_filter_block') !== FALSE) {
        $element['plugin_id']['#options']['Exposed Form (Views)'][$key] = _mrc_helper_get_block_label($key) ?: $label;
        unset($element['plugin_id']['#options']['Views'][$key]);
      }
    }
    ksort($element['plugin_id']['#options']);
  }
}

/**
 * Get a better block label for the block reference field.
 *
 * @param $key
 *
 * @return string|null
 */
function _mrc_helper_get_block_label($key) {
  $static = &drupal_static(__FUNCTION__, []);
  $key = str_replace('views_exposed_filter_block:', '', $key);

  // If we already got this view, return its label.
  if (isset($static[$key])) {
    return $static[$key];
  }

  list($view_id, $display_id) = explode('-', $key);
  $static[$key] = NULL;

  // Get the view and display labels.
  if ($view = View::load($view_id)) {
    $label = $view->label();
    $display = $view->getDisplay($display_id);
    $static[$key] = $label . ': ' . $display['display_title'];
  }

  return $static[$key];
}
