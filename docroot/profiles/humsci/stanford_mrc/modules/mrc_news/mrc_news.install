<?php

/**
 * @file
 * mrc_news.install
 */

use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Revert the news node display.
 */
function mrc_news_update_8001() {
  if (!\Drupal::moduleHandler()->moduleExists('ui_patterns_ds')) {
    \Drupal::service('module_installer')->install(['ui_patterns_ds']);
  }
  if (!\Drupal::moduleHandler()->moduleExists('rh_node')) {
    \Drupal::service('module_installer')->install(['rh_node']);
  }
  module_load_install('stanford_mrc');
  $path = drupal_get_path('module', 'mrc_news') . '/config/install';
  stanford_mrc_update_configs(TRUE, 'all', $path);
}

/**
 * Delete a field on news node type.
 *
 * @param string $field_name
 *   Field name on news to delete.
 */
function mrc_news_delete_field($field_name) {
  $field_storage = FieldStorageConfig::loadByName('node', $field_name);

  // Check if field not found.
  if (is_null($field_storage)) {
    // Logs a notice.
    \Drupal::logger('stanford_paragraph_types')
      ->notice("Could not find field: %field_name", ["%field_name" => $field_name]);
    return;
  }
  foreach ($field_storage->getBundles() as $bundle => $label) {
    $field = FieldConfig::loadByName('node', $bundle, $field_name);
    // Delete field.
    $field->delete();
  }
}

/**
 * Update some fields.
 */
function mrc_news_update_8002() {
  /** @var \Drupal\Core\Config\Config $config_entity */
  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
  $config_factory = \Drupal::configFactory();

  // Delete unwanted fields.
  mrc_news_delete_field('field_s_news_source');
  mrc_news_delete_field('field_s_news_attachment');
  field_purge_batch(250);

  // Delete the unwanted field configs.
  $delete_configs = [
    'field.field.node.stanford_news_item.field_s_news_source',
    'field.storage.node.field_s_news_source',
    'field.field.node.stanford_news_item.field_s_news_attachment',
    'field.storage.node.field_s_news_attachment',
  ];
  foreach ($delete_configs as $config) {
    if ($config_entity = $config_factory->getEditable($config)) {
      $config_entity->delete();
    }
  }

  // Change existing configs.
  $config_entity = $config_factory->getEditable('rabbit_hole.behavior_settings.node_type_stanford_news_item');
  $config_entity->set('redirect', '[node:field_s_news_link:uri]');
  $config_entity->save();

  $config_entity = $config_factory->getEditable('field.field.node.stanford_news_item.field_s_news_date');
  $config_entity->set('description', 'Enter the date the external article was published on.');
  $config_entity->set('label', 'Publish date');
  $config_entity->set('default_value', [
    'default_date_type' => 'now',
    'default_date' => 'now',
  ]);
  $config_entity->save();

  $config_entity = $config_factory->getEditable('field.field.node.stanford_news_item.field_mrc_event_series');
  $config_entity->set('description', 'Select which Event Series this belongs to.');
  $config_entity->save();

  $config_entity = $config_factory->getEditable('field.field.node.stanford_news_item.field_s_news_link');
  $config_entity->set('label', 'Link to External Article');
  $config_entity->save();

  // Create new byline field.
  $field_storage_config = FieldStorageConfig::loadByName('node', 'field_s_news_byline');
  if (empty($field_storage_config)) {
    FieldStorageConfig::create([
      'field_name' => 'field_s_news_byline',
      'entity_type' => 'node',
      'type' => 'string',
      'cardinality' => 1,
    ])->save();
  }

  $field_instance = FieldConfig::loadByName('node', 'stanford_news_item', 'field_s_news_byline');
  if (empty($field_instance)) {
    FieldConfig::create([
      'field_name' => 'field_s_news_byline',
      'entity_type' => 'node',
      'bundle' => 'stanford_news_item',
      'label' => 'Byline',
    ])->save();
  }

  $configs = [
    'field.storage.node.field_s_news_byline',
    'field.field.node.stanford_news_item.field_s_news_byline',
    'core.entity_view_display.node.stanford_news_item.default',
    'core.entity_form_display.node.stanford_news_item.default',
    'views.view.mrc_news',
  ];

  // Reset a few configs that are too annoying to edit manually.
  module_load_install('stanford_mrc');
  $path = drupal_get_path('module', 'mrc_news') . '/config/install';
  stanford_mrc_update_configs(TRUE, $configs, $path);
}

/**
 * Feedback changes.
 */
function mrc_news_update_8003() {
  /** @var \Drupal\Core\Config\Config $config_entity */
  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
  $config_factory = \Drupal::configFactory();

  $config_entity = $config_factory->getEditable('field.field.node.stanford_news_item.field_s_news_link');
  $config_entity->set('description', "Insert the article's source for the URL link (e.g. Stanford News)");
  $config_entity->set('settings.link_type', 16);
  $config_entity->save();
}
