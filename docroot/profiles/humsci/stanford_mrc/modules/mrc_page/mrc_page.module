<?php

/**
 * @file
 * mrc_page.module
 */

use \Drupal\Core\Form\FormStateInterface;
use Drupal\paragraphs\Entity\Paragraph;

function mrc_page_preprocess_field(&$variables) {
  if ($variables['element']['#field_name'] == 'field_s_mrc_page_bricks' && $variables['element']['#view_mode'] == 'search_result') {
    foreach ($variables['items'] as &$brick_item) {
      foreach ($brick_item['content'] as $delta => $brick) {
        /** @var Paragraph $paragraph */
        $paragraph = $brick['#paragraph'];
        if ($paragraph->bundle() == 'mrc_view') {
          unset($brick_item['content'][$delta]);
        }
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mrc_page_form_node_stanford_basic_page_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add a custom submit handler to save the array of types back to the config file.
  $form['actions']['cancel'] = [
    '#type' => 'submit',
    '#value' => t('Cancel'),
    '#submit' => ['mrc_page_cancel'],
    '#limit_validation_errors' => [],
  ];

  //Adding js to prompt for cancel confirmation.
  $form['#attached']['library'][] = 'mrc_page/admin';
}

/**
 * Custom Callback for cancel button.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function mrc_page_cancel(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $form_state->getFormObject()->getEntity();
  $form_state->setRedirectUrl($node->toUrl());
}
