<?php

/**
 * @file
 * su_humsci_profile.install
 */

use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;
use Drupal\shortcut\Entity\Shortcut;
use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install().
 */
function su_humsci_profile_install() {
  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // We install some menu links, so we have to rebuild the router, to ensure the
  // menu links are valid.
  \Drupal::service('router.builder')->rebuildIfNeeded();

  // Allow authenticated users to use shortcuts.
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['access shortcuts']);

  // Populate the default shortcut set.
  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('Add content'),
    'weight' => -20,
    'link' => ['uri' => 'internal:/node/add'],
  ]);
  $shortcut->save();

  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('All content'),
    'weight' => -19,
    'link' => ['uri' => 'internal:/admin/content'],
  ]);
  $shortcut->save();

  // Allow all users to use search.
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, ['search content']);
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['search content']);
}

/**
 * Enables config readonly module after profile finishes.
 */
function su_humsci_profile_lock_config(&$install_state) {
  install_finished($install_state);
  \Drupal::service('module_installer')->install(['hs_config_readonly']);
}

/**
 * Create config split entities.
 */
function su_humsci_profile_update_8002() {
  \Drupal::service('module_installer')->install([
    'config_split',
    'config_ignore',
  ]);

  // Install all the default configs first which includes environment specific
  // config splits.
  $source = new FileStorage('../config/default');
  /** @var \Drupal\Core\Config\CachedStorage $config_storage */
  $config_storage = \Drupal::service('config.storage');
  foreach ($source->listAll() as $name) {
    if (strpos($name, 'config_split') !== FALSE || strpos($name, 'config_ignore') !== FALSE) {
      $config_storage->write($name, $source->read($name));
    }
  }

  // Install the config splits from the individual site config directory.
  $file_dir = \Drupal::service('file_system')
    ->realpath(file_default_scheme() . "://");
  $site_path = str_replace('/files', '', $file_dir);
  $site_dir = substr($site_path, strrpos($site_path, '/') + 1);

  if (is_dir("../config/$site_dir")) {
    $source = new FileStorage("../config/$site_dir");
    /** @var \Drupal\Core\Config\CachedStorage $config_storage */
    $config_storage = \Drupal::service('config.storage');
    foreach ($source->listAll() as $name) {
      if (strpos($name, 'config_split') !== FALSE) {
        $config_storage->write($name, $source->read($name));
      }
    }
  }
}

/**
 * Uninstalls search module.
 */
function su_humsci_profile_update_8003() {
  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
  $module_installer = \Drupal::service('module_installer');
  $module_installer->uninstall(['search']);
}

/**
 * Invalidate sample content.
 */
function su_humsci_profile_update_8004() {
  \Drupal::database()
    ->update('key_value_expire')
    ->fields(['expire' => 0])
    ->condition('collection', 'tempstore.shared.layout_builder.sample_entity')
    ->execute();
}

/**
 * Create CI Config Split settings.
 */
function su_humsci_profile_update_8005() {
  $source = new FileStorage('../config/default');
  /** @var \Drupal\Core\Config\CachedStorage $config_storage */
  $config_storage = \Drupal::service('config.storage');
  $config_storage->write('config_split.config_split.ci', $source->read('config_split.config_split.ci'));
}

/**
 * Update config ignore settings.
 */
function su_humsci_profile_update_8006() {
  $config = \Drupal::configFactory()->getEditable('config_ignore.settings');
  if ($ignored_entities = $config->get('ignored_config_entities')) {
    $ignored_entities[] = 'user.role.*:permissions';
    $config->set('ignored_config_entities', $ignored_entities);
    $config->save();
  }
}

/**
 * Give site managers permission to view user list.
 */
function su_humsci_profile_update_8007() {
  $site_manager = \Drupal\user\Entity\Role::load('site_manager');
  $site_manager->grantPermission('view user list');
  $site_manager->save();
}
