<?php

/**
 * @file
 * su_humsci_profile.install
 */

use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;
use Drupal\shortcut\Entity\Shortcut;
use Drupal\config_split\Entity\ConfigSplitEntity;

/**
 * Implements hook_install().
 */
function su_humsci_profile_install() {
  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // We install some menu links, so we have to rebuild the router, to ensure the
  // menu links are valid.
  \Drupal::service('router.builder')->rebuildIfNeeded();

  // Allow authenticated users to use shortcuts.
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['access shortcuts']);

  // Populate the default shortcut set.
  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('Add content'),
    'weight' => -20,
    'link' => ['uri' => 'internal:/node/add'],
  ]);
  $shortcut->save();

  $shortcut = Shortcut::create([
    'shortcut_set' => 'default',
    'title' => t('All content'),
    'weight' => -19,
    'link' => ['uri' => 'internal:/admin/content'],
  ]);
  $shortcut->save();

  // Allow all users to use search.
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, ['search content']);
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, ['search content']);
}

/**
 * Enables config readonly module after profile finishes.
 */
function su_humsci_profile_lock_config(&$install_state) {
  install_finished($install_state);
  \Drupal::service('module_installer')->install(['hs_config_readonly']);
}

/**
 * Create config split entities.
 */
function su_humsci_profile_update_8002() {
  \Drupal::service('module_installer')->install(['config_split']);

  $module_lsit = [
    'acquia_connector' => 0,
    'simplesamlphp_auth' => 0,
  ];
  $envs = [
    'local' => [
      'uuid' => '41c5d8ad-fd3f-4063-bedb-ed03930425e7',
      'module' => ['devel' => 0],
    ],
    'dev' => [
      'uuid' => 'def1a9c6-c7bb-483a-81ed-dd33df4b1970',
      'module' => $module_lsit,
    ],
    'stage' => [
      'uuid' => '2d143306-d314-41c6-8187-de88a9aa1551',
      'module' => $module_lsit,
    ],
    'prod' => [
      'uuid' => 'f6a93472-9c36-4caa-b752-6e99e19c071e',
      'module' => $module_lsit,
    ],
  ];
  foreach ($envs as $env => $values) {
    $split = [
      'langcode' => 'en',
      'status' => FALSE,
      'dependencies' => [],
      'id' => $env,
      'label' => ucfirst($env),
      'folder' => '../config/archaeology/' . $env,
      'module' => [],
      'theme' => [],
      'blacklist' => [],
      'graylist' => [],
      'graylist_dependents' => TRUE,
      'graylist_skip_equal' => TRUE,
      'weight' => 0,
    ];

    $split = $values + $split;
    $split = ConfigSplitEntity::create($split);
    $split->save();
  }
}
