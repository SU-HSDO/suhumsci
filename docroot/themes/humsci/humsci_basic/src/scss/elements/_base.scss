:root {
  // These variables will be used to style color pairings.
  // They will be updated depending on the parent color pairing.
  // We have to set the variables here and give them default values.
  @include hb-colorful {
    --palette--primary: #{hb-get-pairing-color("primary", $hb-colorful-default, $hc-colorful-pairings)};
    --palette--secondary: #{hb-get-pairing-color("secondary", $hb-colorful-default, $hc-colorful-pairings)};
    --palette--tertiary: #{hb-get-pairing-color("tertiary", $hb-colorful-default, $hc-colorful-pairings)};
    --palette--primary-hero-overlay: #{hb-get-pairing-color("primary-hero-overlay", $hb-colorful-default, $hc-colorful-pairings)};
    --palette--secondary-active: #{hb-get-pairing-color("secondary-active", $hb-colorful-default, $hc-colorful-pairings)};
    --palette--secondary-highlight: #{hb-get-pairing-color("secondary-highlight", $hb-colorful-default, $hc-colorful-pairings)};
    --palette--tertiary-reversed: #{hb-get-pairing-color("tertiary-reversed", $hb-colorful-default, $hc-colorful-pairings)};
  }
}

html {
  // Use Decanter's root font size
  font-size: $hb-root-font-size;
}

body {
  @include hb-body--small;

  @include hb-colorful {
    font-family: $hb-colorful-font--sans;
  }

  @include grid-media-min('lg') {
    @include hb-body--medium;
  }
}

a:not([class]) {
  @include hb-link--inline;
}

h1:not([class]) {
  @include hb-heading-1;

  a:not([class]) {
    @include hb-link;
  }
}

h2:not([class]) {
  @include hb-heading-2;

  a.is-active,
  a:not([class]) {
    @include hb-link;
  }
}

h3:not([class]) {
  @include hb-heading-3;

  a:not([class]) {
    @include hb-link;
  }
}

h4:not([class]) {
  @include hb-heading-4;

  a:not([class]) {
    @include hb-link;
  }
}

h5:not([class]) {
  @include hb-heading-5;

  a:not([class]) {
    @include hb-link;
  }
}

h6:not([class]) {
  @include hb-heading-6;

  a:not([class]) {
    @include hb-link;
  }
}

h1:not([class]),
h2:not([class]),
h3:not([class]),
h4:not([class]),
h5:not([class]),
h6:not([class]) {
  margin-top: 0;
  margin-bottom: hb-calculate-rems(20px);

  @include grid-media-min('md') {
    margin-bottom: hb-calculate-rems(24px);
  }
}

p:not([class]) {
  margin-top: 0;

  &:last-of-type {
    margin-bottom: 0;
  }
}

strong:not([class]) {
  font-weight: hb-theme-font-weight(semibold);
  font-size: inherit;
}

em:not([class]) {
  font-style: italic;
  font-weight: inherit;
  font-size: inherit;
}

blockquote:not([class]) {
  @include hb-blockquote;
}

ul:not([class]) {
  @include hb-unordered-list;
}

ol:not([class]) {
  @include hb-ordered-list;
}

caption:not([class]) {
  font-size: hb-calculate-rems(14px);
  color: darken($su-color-driftwood, 45%);
}

button:not([class]) {
  &:hover {
    cursor: pointer;
  }
}
