// Collection Paragraph Styles
.hs-paragraph-style {
  &--well,
  &--well-full-width {
    @include hb-well;
    padding: 0 hb-spacing-width();
    overflow: auto;

    .paragraph-item {
      .field__item__label {
        margin-top: 0;
      }

      &.ptype-hs-accordion {
        details {
          margin: 0;
          background-color: var(--palette--white);
        }
      }

      &.ptype-hs-hero-image,
      &.ptype-hs-gradient-hero-image,
      &.ptype-hs-carousel {
        width: 100%;

        .hb-hero-overlay::before,
        .hb-gradient-hero::before {
          background-color: var(--palette--gray-medium);
        }
      }
    }
  }

  &--well {
    width: 100%;
  }

  &--well-full-width {
    left: calc(-50vw + 50%);
    position: relative;
    width: 100vw;

    .hb-three-column--one-sidebar &,
    .hb-three-column--two-sidebar & {
      left: inherit;
      position: static;
      width: 100%;
    }

    > h2 {
      @include hb-page-width;
    }

    .field-hs-collection-items {
      .hb-three-column--no-sidebar & {
        @include hb-page-width;
      }
    }
  }

  &--gray-well {
    background-color: var(--palette--gray-well);
  }

  &--light-well {
    background-color: var(--palette--light-well);
  }
}

// Decanter uses flexbox for row components. For modern browsers, let's use CSS Grid.
// Collections items have been added to this group, base Collection styles here: docroot/modules/humsci/hs_paragraph_types/css/hs_collection.css
.field-hs-collection-items {
  // When there is more than one item in a row it uses grid
  @include grid-media-min('sm') {
    display: grid;
    gap: hb-spacing-width();
  }

  &.counted-items-1,
  &.item-per-row--1 {
    display: block;
  }

  @for $i from 2 through $hb-counted-items-count {
    &.counted-items-#{$i},
    &.item-per-row--#{$i} {
      @include grid-media-min('sm') {
        grid-template-columns: repeat(2, minmax(0, 1fr));
      }

      @if $i > 2 {
        @include grid-media-min('md') {
          grid-template-columns: repeat(3, minmax(0, 1fr));
        }
      }

      @if $i > 3 {
        @include grid-media-min('lg') {
          grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
        }
      }

      .paragraph-item {
        @include grid-media-min('sm') {
          margin: 0 !important;
        }
      }

      .hs-paragraph-style--well &,
      .hs-paragraph-style--well-full-width & {
        @include grid-media-min('sm') {
          margin: hb-spacing-width() auto;
        }
      }
    }
  }
}
