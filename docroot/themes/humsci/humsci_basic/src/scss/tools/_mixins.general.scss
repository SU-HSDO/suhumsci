@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin visually-hidden($status:null) {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0;
  border: 0;
  height: 1px;
  width: 1px;
  overflow: hidden;

  @if $status == 'disable' {
    position: static;
    clip: auto;
    height: auto;
    width: auto;
    overflow: visible;
  }
}

// Adds a background box pseudo element
// You can choose the color and height
// Remember to add position: relative to the parent element
@mixin psuedo-background-box($color, $height: 100%, $width: 100%) {
  content: ' ';
  position: absolute;
  height: $height;
  width: $width;

  @include hb-colorful {
    @include hb-pairing-color('background-color', $color);
  }
}

// Meant for the Colorful theme
// Applies a colorful bar above text to a psuedo element
// You can choose the color and width
// Remember to add position: relative to the parent element
@mixin hb-colorful-text-bar($color, $height: hb-calculate-rems(4px), $width: hb-calculate-rems(65px)) {
  display: block;
  @include psuedo-background-box($color, $height, $width);
}

// Adds a background linear gradient for use in the
// vertical linked card
// The gradient adds a 20px height white block at the top of the linked card
// so that the title looks like it has a negative margin on the top when
// there isn't an image.
@mixin hb-vertical-card-background-block($white, $fallback, $background) {
  // The gradient looks intimidating but it's only because of all the mixins
  // we have to use. If we get rid of those it looks more like this:
  // linear-gradient(to bottom, white, white 20px, traditional-color 20px);
  background-image: linear-gradient(to bottom, $white, $white hb-calculate-rems(20px), $fallback hb-calculate-rems(20px));
  background-image: linear-gradient(to bottom, $white, $white hb-calculate-rems(20px), $background hb-calculate-rems(20px));
}

// Support nested list styles within both the ordered and unordered lists
@mixin hb-nested-list-styles {
  // Unordered nested lists
  // second level
  li ul > li { // hollow circle
    &:first-of-type {
      margin-top: 1rem;
    }

    &:last-of-type {
      margin-bottom: 0;
    }

    &::before {
      background-color: transparent;
      @include hb-pairing-color('border-color', 'secondary');
      border-width: 1px;
      border-style: solid;
      content: '';
      counter-increment: inherit;
      top: hb-calculate-rems(8px);
      min-width: inherit;
    }
  }

  // third level
  li li ul > li { // solid square
    &::before {
      border-radius: 0;
      border: 0;
      @include hb-pairing-color('background-color', 'secondary');
      top: hb-calculate-rems(8px);
      min-width: inherit;
    }
  }

  // Ordered nested lists
  // second level
  li ol > li { // lower alpha
    &:first-of-type {
      margin-top: 1rem;
    }

    &:last-of-type {
      margin-bottom: 0;
    }

    &::before {
      content: counter(li, lower-alpha) '.';
      height: 0;
      width: auto;
    }
  }

  // third level
  li li ol > li { // lower roman
    &::before {
      content: counter(li, lower-roman) '.';
    }
  }
}

@mixin hb-unordered-list {
  list-style-type: none;
  margin: 0 0 hb-spacing-width('md');
  padding-left: hb-calculate-rems(22px);

  ul {
    margin: hb-calculate-rems(10px) 0 0;
  }

  li {
    position: relative;
    line-height: 122%;
    margin-bottom: hb-calculate-rems(10px);
    padding-left: hb-calculate-rems(18px);

    // This prevents the list item to float behind images that are floated to the left
    overflow: hidden;

    &::before {
      content: '';
      display: block;
      height: hb-calculate-rems(6px);
      width: hb-calculate-rems(6px);
      border-radius: 50%;
      @include hb-pairing-color('background-color', 'secondary');

      position: absolute;
      left: 0;
      top: hb-calculate-rems(8px);

      .hb-dark-pattern &,
      .hb-dark-inversion .views-element-container & {
        @include hb-pairing-color('background-color', 'secondary-highlight');
      }

      .hb-raised-cards .hb-dark-pattern &,
      .hb-dark-inversion .hb-raised-cards .views-element-container & {
        @include hb-pairing-color('background-color', 'secondary');
      }
    }
  }

  @include hb-nested-list-styles;
}

@mixin hb-ordered-list {
  counter-reset: li;
  list-style-type: none;
  margin: 0 0 hb-spacing-width('md');
  padding-left: hb-calculate-rems(8px);

  ol {
    margin: hb-calculate-rems(10px) 0 0;
  }

  li {
    position: relative;
    line-height: 122%;
    margin-bottom: hb-calculate-rems(10px);
    padding-left: hb-calculate-rems(38px); // should only be 18px when on a UL // was 28

    // This prevents the list item to float behind images that are floated to the left
    overflow: hidden;

    &::before {
      content: counter(li) '.';
      counter-increment: li;
      font-size: hb-calculate-rems(16px);
      font-weight: hb-theme-font-weight(semibold);
      @include hb-pairing-color('color', 'secondary');

      position: absolute;
      left: 0;
      top: 0;
      min-width: hb-calculate-rems(30px);
      text-align: right;

      @include grid-media-min('lg') {
        top: hb-calculate-rems(1px); // improves alignment of markers at larger screen sizes
      }

      .hb-dark-pattern & {
        @include hb-pairing-color('color', 'secondary-highlight');
      }
    }
  }

  @include hb-nested-list-styles;

  // ul markers nested in an ol list. These styles must be set after the
  // hb-nested-list-styles mixin beside they are specific to ul markers
  // nested inside of ordered lists.
  ul > li {
    &::before {
      margin-left: hb-calculate-rems(16px);
    }
  }
}

// Remove or reset list styles to browser defaults
@mixin hb-list-reset {
  ul:not([class]) {
    list-style-type: disc;

    ul {
      list-style-type: circle;

      ul {
        list-style-type: square;
      }
    }

    li {
      overflow: visible;
      padding-left: 0;

      &::before {
        content: none;
      }
    }
  }

  ol:not([class]) {
    list-style-type: decimal;
    padding-left: revert;

    li {
      overflow: visible;
      padding-left: 0;

      &::before {
        content: none;
      }
    }
  }
}

@mixin hb-list-empty-styles {
  list-style: none;
  margin: 0;
  padding: 0;
}

@mixin hb-divider {
  width: 100%;
  border-bottom: $hb-thin-border;
  @include hb-global-color('border-color', 'gray');
}

// Used for link typography mixins across all themes
// both with and without icons
@mixin hb-link-background-image($icon, $icon-width, $icon-position, $default-palette, $palette-array) {
  // For links without an icon
  // Fallback for IE
  background-image: linear-gradient(to top, transparent 50%, hb-get-pairing-color('tertiary-highlight', $default-palette, $palette-array) 50%);

  // Color Pairing Custom Variable
  background-image: linear-gradient(to top, transparent 50%, var(--palette--tertiary-highlight) 50%);
  // For links with an icon
  // Changes the value passed into background-image to
  // create space for the external link space to exist
  @if $icon {
    $icon-width: calc(100% - #{$icon-width});

    // Fallback for IE
    background-image: linear-gradient(to $icon-position, hb-get-pairing-color('tertiary-highlight', $default-palette, $palette-array) $icon-width transparent $icon-width);

    // Color Pairing Custom Variable
    background-image: linear-gradient(to $icon-position, var(--palette--tertiary-highlight) $icon-width, transparent $icon-width);
  }
}

@mixin hb-well {
  @include hb-themes(('colorful', 'airy')) {
    @include hb-global-color('background-color', 'gray-light');
  }

  @include hb-traditional {
    @include hb-pairing-color('background-color', 'tertiary-highlight');
  }

  .hb-dark-pattern &,
  .hb-dark-inversion .views-element-container & {
    @include hb-global-color('color', 'black');
  }

  padding: hb-calculate-rems(20px) hb-calculate-rems(18px);
  border: 0 none;

  .hb-three-column__sidebar-1 &,
  .hb-three-column__sidebar-2 & {
    position: relative;
    z-index: $hb-z-index-small-1;
  }
}

@mixin hb-relative {
  position: relative;
}
