@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin visually-hidden($status:null) {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0;
  border: 0;
  height: 1px;
  width: 1px;
  overflow: hidden;

  @if $status == 'disable' {
    position: static;
    clip: auto;
    height: auto;
    width: auto;
    overflow: visible;
  }
}

// Adds a background box pseudo element
// You can choose the color and height
// Remember to add position: relative to the parent element
@mixin psuedo-background-box($color, $height: 100%, $width: 100%) {
  content: ' ';
  position: absolute;
  height: $height;
  width: $width;

  @include hb-colorful {
    @include hb-pairing-color('background-color', $color);
  }
}

// Adds a background linear gradient for use in the
// vertical linked card
// The gradient adds a 20px height white block at the top of the linked card
// so that the title looks like it has a negative margin on the top when
// there isn't an image.
@mixin hb-vertical-card-background-block($white, $fallback, $background) {
  // The gradient looks intimidating but it's only because of all the mixins
  // we have to use. If we get rid of those it looks more like this:
  // linear-gradient(to bottom, white, white 20px, traditional-color 20px);
  background-image: linear-gradient(to bottom, $white, $white hb-calculate-rems(20px), $fallback hb-calculate-rems(20px));
  background-image: linear-gradient(to bottom, $white, $white hb-calculate-rems(20px), $background hb-calculate-rems(20px));
}

@mixin hb-unordered-list {
  list-style-type: none;
  margin: 0 0 hb-calculate-rems(hb-spacing-width('md'));

  ul {
    margin: hb-calculate-rems(10px) 0 0;
  }

  li {
    position: relative;
    line-height: 122%;
    margin-bottom: hb-calculate-rems(10px);

    &::before {
      content: '';
      display: block;
      height: hb-calculate-rems(6px);
      width: hb-calculate-rems(6px);
      border-radius: 50%;
      @include hb-pairing-color('background-color', 'secondary');

      position: absolute;
      left: hb-calculate-rems(-18px);
      top: hb-calculate-rems(8px);

      .hb-local-footer--dark & {
        @include hb-pairing-color('background-color', 'secondary-highlight');
      }
    }
  }
}

@mixin hb-ordered-list {
  counter-reset: li;
  list-style-type: none;
  margin: 0 0 hb-calculate-rems(hb-spacing-width('md'));

  ol {
    margin: hb-calculate-rems(10px) 0 0;
  }

  li {
    position: relative;
    line-height: 122%;
    margin-bottom: hb-calculate-rems(10px);

    &::before {
      content: counter(li) '.';
      counter-increment: li;
      font-size: hb-calculate-rems(16px);
      font-weight: hb-theme-font-weight(semibold);
      @include hb-pairing-color('color', 'secondary');

      position: absolute;
      left: hb-calculate-rems(-18px);

      .hb-local-footer--dark & {
        @include hb-pairing-color('color', 'secondary-highlight');
      }
    }
  }
}

@mixin hb-divider {
  width: 100%;
  border-bottom: $hb-thin-border;
  @include hb-global-color('border-color', 'gray');
}

// Used for link typography mixins across all themes
// both with and without icons
@mixin hb-link-background-image($icon, $icon-width, $default-palette, $palette-array) {
  // For links without an icon
  // Fallback for IE
  background-image: linear-gradient(to top, transparent 50%, hb-get-pairing-color('tertiary-highlight', $default-palette, $palette-array) 50%);

  // Color Pairing Custom Variable
  background-image: linear-gradient(to top, transparent 50%, var(--palette--tertiary-highlight) 50%);
  // For links with an icon
  // Changes the value passed into background-image to
  // create space for the external link space to exist
  @if $icon {
    // Fallback for IE
    background-image: linear-gradient(to left, transparent $icon-width, hb-get-pairing-color('tertiary-highlight', $default-palette, $palette-array) $icon-width);

    // Color Pairing Custom Variable
    background-image: linear-gradient(to left, transparent $icon-width, var(--palette--tertiary-highlight) $icon-width);
  }
}
