@mixin visually-hidden($status:null) {
  position: absolute;
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0;
  border: 0;
  height: 1px;
  width: 1px;
  overflow: hidden;

  @if $status == 'disable' {
    position: static;
    clip: auto;
    height: auto;
    width: auto;
    overflow: visible;
  }
}

// This removes styles added by default to button elements.
// For when something should semantically be a button,
// but isn't buttony in appearance.
@mixin unbuttonize {
  background-color: transparent;
  color: inherit;
  border: 0;
  margin: 0;
  padding: 0;
  text-align: inherit;
  font: inherit;
  border-radius: 0;
  appearance: none; // Just in case we missed anything.
}

// Taken and modified from Decanter fancy-hover
// @param {variable} $color [$su-color-dark-red]  - background color, e.g., #eeeeee.
// @param {variable} $active [$su-color-black]  - hover/focus border color.
// @param {string} $position [bottom]  - The position of the border relative to the element the mixin is applied to. The default is 'bottom' and the other choices are 'top', 'left' and 'right'.
// @param {string} $thickness [6px]  - The thickness of the border, e.g., '3px', '1em'.
@mixin hb-fancy-hover($color: $su-color-dark-red, $hover: $su-color-black, $position: 'bottom', $thickness: '6px') {
  text-decoration: none;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    visibility: visible;
    background-color: $color;
    transition: transform 0.3s ease-in, background-color 0.3s ease-in;
  }

  &:hover,
  &:focus,
  &:active {
    text-decoration: none;

    &::before {
      background-color: $hover;
      transition: transform 0.3s ease-out, background-color 0.3s ease-out;
    }
  }

  @if ($position == 'bottom' or $position == 'top') {
    &::before {
      width: 100%;
      height: #{$thickness};
      //scss-lint:disable EmptyLineBetweenBlocks
      left: 0;
      //scss-lint:enable EmptyLineBetweenBlocks
    } @if ($position == 'bottom') {
      @include padding(null null 0.8em);

      &::before {
        bottom: 0;
      }
    } @else if ($position == 'top') {
      @include padding(0.8em null null);

      &::before {
        top: 0;
      }
    }
  } @else if ($position == 'left' or $position == 'right') {
    &::before {
      height: 100%;
      width: #{$thickness};
      //scss-lint:disable EmptyLineBetweenBlocks
      bottom: 0;
      //scss-lint:enable EmptyLineBetweenBlocks
    } @if ($position == 'left') {
      &::before {
        left: 0;
      }
    } @else if ($position == 'right') {
      &::before {
        right: 0;
      }
    }
  }
}
