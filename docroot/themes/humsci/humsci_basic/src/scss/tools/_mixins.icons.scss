// This mixin could use some additional work to DRY up the code.
@mixin hb-icon-background($icon, $color) {
  @include hb-themes(('colorful', 'airy')) {
    @if map-has-key($hc-colorful-globals, $color) {
      $icon-color: map-get($hc-colorful-globals, $color);
      background-image: svg(hc-get-icons($icon, $icon-color));

    } @else {
      $icon-color: map-get(map-get($hc-colorful-pairings, 'ocean'), $color);
      background-image: svg(hc-get-icons($icon, $icon-color));

      .hc-pairing-ocean & {
        $icon-color: map-get(map-get($hc-colorful-pairings, 'ocean'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

      .hc-pairing-mountain & {
        $icon-color: map-get(map-get($hc-colorful-pairings, 'mountain'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

      .hc-pairing-cardinal & {
        $icon-color: map-get(map-get($hc-colorful-pairings, 'cardinal'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

      .hc-pairing-lake & {
        $icon-color: map-get(map-get($hc-colorful-pairings, 'lake'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

      .hc-pairing-canyon & {
        $icon-color: map-get(map-get($hc-colorful-pairings, 'canyon'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

      .hc-pairing-cliff & {
        $icon-color: map-get(map-get($hc-colorful-pairings, 'cliff'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }
    }
  }

  @include hb-traditional {
    @if map-has-key($ht-traditional-globals, $color) {
      $icon-color: map-get($ht-traditional-globals, $color);
      background-image: svg(hc-get-icons($icon, $icon-color));

    } @else {
      $icon-color: map-get(map-get($ht-traditional-pairings, 'cardinal'), $color);
      background-image: svg(hc-get-icons($icon, $icon-color));

      .ht-pairing-cardinal & {
        $icon-color: map-get(map-get($ht-traditional-pairings, 'cardinal'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

      .ht-pairing-bluejay & {
        $icon-color: map-get(map-get($ht-traditional-pairings, 'bluejay'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

      .ht-pairing-warbler & {
        $icon-color: map-get(map-get($ht-traditional-pairings, 'warbler'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

      .ht-pairing-firefinch & {
        $icon-color: map-get(map-get($ht-traditional-pairings, 'firefinch'), $color);
        background-image: svg(hc-get-icons($icon, $icon-color));
      }

    }
  }
}

// The external link icon base implementation which sets the sizing and spacing.
// This has two use cases.
// It is used alongside the hb-link--inline mixin when an external icon is needed. The WYSIWYG hs-external-link class is an example of this.
// And within the fa-ext class in block-layout.scss to add an external link icon.
@mixin hb-external-link-icon {
  margin-right: hb-calculate-rems(2px);
  position: relative;

  &::after {
    content: '';
    @include hb-icon-background('ext-link', 'tertiary');
    display: inline-block;
    position: relative;
    background-position: center right;
    background-repeat: no-repeat;
    background-size: hb-calculate-rems(11px);
    height: hb-calculate-rems(20px);
    width: hb-calculate-rems(11px);
    margin-bottom: hb-calculate-rems(-5px);
    padding-left: hb-calculate-rems(15px);
  }

  &:hover::after,
  &:focus::after {
    @include hb-icon-background('ext-link', 'tertiary-darken-20');
  }

  .hb-dark-pattern & {
    &::after {
      @include hb-themes(('colorful', 'airy')) {
        @include hb-icon-background('ext-link', 'tertiary-reversed');
      }

      @include hb-traditional {
        @include hb-icon-background('ext-link', 'tertiary-highlight');
      }
    }

    &:hover::after,
    &:focus::after {
      @include hb-themes(('colorful', 'airy')) {
        @include hb-icon-background('ext-link', 'tertiary-highlight');
      }

      @include hb-traditional {
        @include hb-icon-background('ext-link', 'tertiary-highlight-darken-10');
      }
    }
  }
}

// Return a specific color of the fa-ext icon
// This mixin can be used to trigger the icon to change colors when the
// containing element it is associated with changes state (such as hover and/or focus).
@mixin hb-ext-icon-color($color) {
  .fa-ext::after {
    @include hb-icon-background('ext-link', $color);
    background-repeat: no-repeat;
    background-position: center right;
  }
}

@mixin hb-icon-link-arrow($color: 'black') {
  background-repeat: no-repeat;
  background-position: left;
  background-size: 55%;

  @include hb-themes(('airy', 'colorful')) {
    @include hb-icon-background('arrow-right', $color);
  }

  @include hb-traditional {
    @include hb-icon-background('arrow-right-long', $color);
  }
}

@mixin hb-icon-link-arrow-box-shadow($color: 'black') {
  background-repeat: no-repeat;
  background-position: left;
  background-size: 55%;

  @include hb-themes(('airy', 'colorful')) {
    @include hb-icon-background('arrow-right-box-shadow', $color);
    filter: drop-shadow(hb-calculate-rems(1.75px) hb-calculate-rems(2px) 0 var(--palette--black));
  }

  @include hb-traditional {
    @include hb-icon-background('arrow-right-long-box-shadow', $color);
    filter: drop-shadow(hb-calculate-rems(1.75px) hb-calculate-rems(2px) 0 var(--palette--black));
  }
}

@mixin hb-icon-calendar($color: 'black') {
  @include hb-icon-background('calendar', $color);
  background-repeat: no-repeat;
  background-position: top left;
}

@mixin hb-icon-location($color: 'black') {
  @include hb-icon-background('location', $color);
  background-repeat: no-repeat;
  background-position: top left;
}

@mixin hb-icon-speaker($color: 'black') {
  @include hb-icon-background('speaker', $color);
  background-repeat: no-repeat;
  background-position: top left;
}

@mixin hb-icon-ellipse($color: 'black') {
  @include hb-icon-background('ellipse', $color);
  background-repeat: no-repeat;
  background-position: top left;
}

@mixin hb-icon-ellipse-border($color: 'black') {
  @include hb-icon-background('ellipse-border', $color);
  background-repeat: no-repeat;
  background-position: top left;
}

@mixin hb-fa-mailto-icon {
  span.fa-mailto {
    margin-left: hb-calculate-rems(4px);

    span.fa-envelope {
      color: var(--palette--tertiary);
    }
  }

  &:hover,
  &:focus {
    span.fa-mailto {
      span.fa-envelope {
        color: var(--palette--tertiary-darken-20);
      }
    }
  }
}
