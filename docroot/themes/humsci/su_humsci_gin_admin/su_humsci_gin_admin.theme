<?php

use Drupal\Core\Template\Attribute;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_library_info_alter().
 */
function su_humsci_gin_admin_library_info_alter(&$libraries, $extension) {
  $libraries_unset = [
    'humsci_traditional' => 'humsci-colorful-styling',
    'humsci_colorful' => 'humsci-traditional-styling',
  ];
  if ($extension === 'su_humsci_gin_admin') {
    $theme = \Drupal::config('system.theme')->get('default');
    unset($libraries[$libraries_unset[$theme]]);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function su_humsci_gin_admin_preprocess(&$variables, $hook) {
  if (str_starts_with($hook, 'pattern_') || $hook === 'paragraph') {
      $theme = \Drupal::config('system.theme')->get('default');
  $color_pairing = theme_get_setting('theme_color_pairing', $theme);
  $prefix = [
    'humsci_traditional' => 'ht',
    'humsci_colorful' => 'hc',
  ];
    $variables['wrapper_attributes'] = new Attribute([
      'class' => [
        $prefix[$theme] . '-pairing-' . $color_pairing,
      ],
    ]);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function su_humsci_gin_admin_preprocess_field(&$variables) {
  // Make additional variables available to the template.
  $variables['attributes']['class'][] = Html::cleanCssIdentifier($variables['field_name']);
  $variables['attributes']['class'][] = Html::cleanCssIdentifier($variables['field_type']);
  $variables['attributes']['class'][] = Html::cleanCssIdentifier('label-' . $variables['label_display']);

  $first_item = isset($variables['element'][0]) ? $variables['element'][0] : NULL;
  $is_paragraph = isset($first_item['#paragraph']) ? $first_item['#paragraph'] : FALSE;
  $has_items = isset($variables['items']) ? count($variables['items']) : FALSE;

  // Add additional information to paragraph fields.
  // Bricks has a different field type and structures the array differently, so
  // we need to check if its actual normal paragraph fields as well.
  if ($variables['field_type'] == 'entity_reference_revisions' && $is_paragraph && $has_items) {
    foreach ($variables['items'] as &$pitem) {
      $paragraph_type = $pitem['content']['#paragraph']->getType();
      $ptype = Html::cleanCssIdentifier("ptype-" . $paragraph_type);
      if (!isset($pitem['attributes']['class'])) {
        $pitem['attributes']['class'] = [];
      }
      $pitem['attributes']['class'][] = "paragraph-item";
      $pitem['attributes']['class'][] = $ptype;
    }
  }
}
