<?php

/**
 * @file
 * Theme functions for su_humsci_gin_admin theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Template\Attribute;
use Drupal\paragraphs\ParagraphInterface;

/**
 * Implements hook_library_info_alter().
 */
function su_humsci_gin_admin_library_info_alter(&$libraries, $extension) {
  $libraries_unset = [
    'humsci_traditional' => 'humsci-colorful-styling',
    'humsci_colorful' => 'humsci-traditional-styling',
  ];
  if ($extension === 'su_humsci_gin_admin') {
    $theme = \Drupal::config('system.theme')->get('default');
    unset($libraries[$libraries_unset[$theme]]);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function su_humsci_gin_admin_preprocess(&$variables, $hook) {
  if (!(str_starts_with($hook, 'pattern_') || $hook == 'paragraph')) {
    return NULL;
  }
  $theme = \Drupal::config('system.theme')->get('default');
  $color_pairing = theme_get_setting('theme_color_pairing', $theme);
  $prefix = [
    'humsci_traditional' => 'ht',
    'humsci_colorful' => 'hc',
  ];
  $variables['wrapper_attributes'] = new Attribute([
    'class' => [
      $prefix[$theme] . '-pairing-' . $color_pairing,
    ],
  ]);
  if ($hook === 'paragraph') {
    $variables['wrapper_attributes']->addClass('paragraph-item', 'ptype-' . Html::cleanCssIdentifier($variables['paragraph']->getType()));
  }
  else {
    $paragraph = isset($variables['context']) ? $variables['context']->getProperty('entity') : NULL;
    if (!($paragraph instanceof ParagraphInterface && $paragraph->bundle() == 'hs_hero_image')) {
      return NULL;
    }
    $parent = $paragraph->getParentEntity();
    if ($parent instanceof ParagraphInterface) {
      $variables['wrapper_attributes']->addClass('paragraph--type--hs-carousel');
    }
  }
}
