<?php

/**
 * @file
 * Preprocess functions for Stanford HumSci.
 */

use Drupal\views\Plugin\views\field\EntityField;
use Drupal\Component\Utility\Html;
use Drupal\Core\DrupalKernel;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;

/**
 * Implements hook_preprocess_patterns_overview_page().
 */
function su_humsci_theme_preprocess_patterns_overview_page(&$variables) {
  uasort($variables['patterns'], function ($pattern_a, $pattern_b) {
    return strcmp($pattern_a['label'], $pattern_b['label']);
  });
}

/**
 * Implements hook_preprocess_page().
 */
function su_humsci_theme_preprocess_page(&$vars) {
  // Node pages are configured with layout builder so we dont need to set this
  // class.
  $request = \Drupal::requestStack();
  $attributes = $request->getCurrentRequest()->attributes->getIterator();
  $controller = isset($attributes['_controller']) ? $attributes['_controller'] : '';
  if (!isset($vars['node']) && strpos($controller, 'layout_builder') === FALSE) {
    $vars['main_class'] = 'decanter-grid';
  }

  // Dynamically add library based on which site directory we are executing in.
  // Taken from blt.settings.php file in Acquia vendor directory.
  if (!isset($site_path)) {
    try {
      $site_dir = DrupalKernel::findSitePath(Request::createFromGlobals());
      $site_dir = str_replace('sites/', '', $site_dir);
    }
    catch (BadRequestHttpException $e) {
      $site_dir = 'default';
    }
  }
  // No errors occur if the library doesn't exist, so this is safe to do.
  $vars['#attached']['library'][] = "su_humsci_theme/$site_dir";
}

/**
 * Implements hook_preprocess_node().
 */
function su_humsci_theme_preprocess_node(&$vars) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $vars['node'];
  $vars['attributes']['class'][] = Html::cleanCssIdentifier($node->bundle());
  $vars['attributes']['class'][] = Html::cleanCssIdentifier($vars['view_mode']);

  // Add the node specific styles.
  if ($vars['page']) {
    $vars['#attached']['library'][] = 'su_humsci_theme/' . $node->bundle();
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function su_humsci_theme_preprocess_views_view(&$vars) {
  if (!empty($vars['more'])) {
    // Add class to read more link in views.
    $vars['more']['#options']['attributes']['class'][] = 'decanter-button';
  }
}

/**
 * Implements hook_preprocess_block().
 */
function su_humsci_theme_preprocess_block(&$vars) {
  $block_ids = ['local_tasks_block'];
  if (in_array($vars['elements']['#plugin_id'], $block_ids)) {
    $vars['attributes']['class'][] = 'decanter-grid';
  }
}

/**
 * Implements hook_preprocess_pattern_view_field().
 */
function su_humsci_theme_preprocess_pattern_view_field(&$vars) {
  $field = $vars['field'];
  if ($field->handler instanceof EntityField) {
    $items = $field->handler->getItems($vars['row']);

    // Make labels plural if they are generic.
    if ($field->label) {
      $replacement = count($items) > 1 ? 's' : '';
      $field->label = str_replace('(s)', $replacement, $field->label);
    }
  }
}

/**
 * Implements hook_preprocess_field().
 */
function su_humsci_theme_preprocess_field(&$vars) {
  // Make labels plural if they are generic.
  $replacement = count($vars['items']) > 1 ? 's' : '';
  $vars['label'] = str_replace('(s)', $replacement, $vars['label']);
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Alter the button on the vertical link card to provide only the url.
 */
function su_humsci_theme_preprocess_pattern_vertical_link_card(&$vars) {
  if (!isset($vars['button'])) {
    return;
  }

  // Find the link in the button region and pull out the href so that we can
  // wrap the entire contents of the pattern in a link.
  $dom = new DOMDocument();
  $dom->loadHTML(render($vars['button']));
  if ($dom->getElementsByTagName('a')->length) {
    $link = $dom->getElementsByTagName('a')->item(0)->getAttribute('href');
    $vars['button'] = $link;
    return;
  }
}

/**
 * Implements hook_preprocess().
 */
function su_humsci_theme_preprocess(&$vars, $hook) {
  $seenIds = &drupal_static(__FUNCTION__, []);
  // Verify ALL id attributes are unique.
  if (!empty($vars['attributes']['id'])) {

    $id = $vars['attributes']['id'];
    if (isset($seenIds[$id])) {
      $vars['attributes']['id'] = $id . '--' . ++$seenIds[$id];
    }
    else {
      $seenIds[$id] = 1;
    }
  }
}
